- Write import/export handles to convert VisJS graph syntax into JSNetworkX graph 
    - http://jsnetworkx.org/api/#/v/v0.3.4/fromDictOfDicts
- Add analytics to bottom drawer (using JSNetworkX for implementations)
- Add a graph library in right-side drawer
    - These can be JSNetworkX graphs, run thru our converter function
        - "Generators" section on http://jsnetworkx.org/api/#/v/v0.3.4
        - http://vlado.fmf.uni-lj.si/pub/networks/data/Ucinet/UciData.htm

- Add charts to visualize graph metrics
    - see how they change over time when a node/edge is added/removed

- Add a right-click ContextMenu to trigger analytics on the selected node/edge
    - what algorithms should be triggered this way?

- Add a Share button to URL encode graphs, and tinyurl the link for sharing
    - add functionality to load in following order:
        1. URL encoded graph
        2. LocalStorage (prompt?)
        3. new default graph

- Add hotlinks to particular graphs
    - e.g. graph-notebook.joehaaga.xyz/karate loads Zachary's Karate graph
        - could also load a "tour" that teaches users how to interpret the analytics/metrics in this particular domain
            - e.g. "centrality indicates who is the sensei of the dojo"

- Let users paste in graphs in any of the popular formats, and convert them to our format
    - Adjacency list, edge list, JSON node link